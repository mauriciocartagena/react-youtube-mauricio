{"version":3,"sources":["components/grid/AddNewSearch.js","components/helpers/getImages.js","components/utils/Loading.js","components/helpers/getUrl.js","components/grid/VideoDowload.js","components/hooks/useFecthVideo.js","components/grid/GridItemImage.js","components/grid/GridItem.js","components/hooks/useFetchImages.js","LayoutYoutube.js","index.js"],"names":["AddNewSearch","setSearch","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","search","className","type","value","placeholder","onChange","target","handleInputChange","getImages","nameSearch","a","url","fetch","resp","json","items","images","map","img","title","snippet","urlVideo","id","videoId","thumbnails","high","Loading","color","name","height","width","getUrl","nameUrl","urlDowload","response","videos","directionUrl","video","VideoDowload","videoUrl","loading","geturl","setGeturl","useEffect","then","catch","useFecthVideo","i","key","controls","autoPlay","src","GridItemImage","state","setState","handleChangeValue","onClick","alt","GridItem","data","setImages","useFetchImages","LayoutYoutube","defaultSearch","image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f96b65b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../../styles/components/AddNewSearch.css';\n\nexport const AddNewSearch = ( { setSearch } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange=(e)=>{\n\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setSearch( search => [ inputValue, ...search] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit } >\n            \n            <div className=\"input-group\">\n                    <input\n                        className=\"form-control search\"\n                        type=\"text\"\n                        value={ inputValue }\n                        placeholder=\"Ingrese palabra a buscar\"\n                        onChange={ (e)=> handleInputChange(e) }\n                    />\n                    <div className=\"input-group-append\">\n                        <button className=\"icon-search fa fa-search fa-2x\" type= \"submit\" />\n                    </div>\n            </div>\n            \n        </form>\n    )\n}\n","\nexport const getImages = async( nameSearch  ) => {\n   \n    const key = 'AIzaSyCzmcLX7Bdf2wmxp8pzYkKDi3NYvoWnpPw';\n\n    const url = `https://www.googleapis.com/youtube/v3/search?key=${ key }&part=snippet&q=${ nameSearch }`;\n\n    const resp = await fetch( url );\n\n    const  { items }  = await resp.json(); \n\n    const images =  items.map(( img )=>{\n        return{\n            title:img.snippet.title,\n            urlVideo:img.id.videoId,\n            url:img.snippet.thumbnails.high.url,\n        }\n    });\n    return images;\n}\n","import React from 'react';\nimport ReactLoading from 'react-loading';\nimport '../../styles/components/utils/Loading.css'\n\nexport const Loading = ( { type, color, name } ) => {\n    return (\n        <div className=\"row justify-content-center h-100 loading\">\n            <div className=\"col-sm-8 align-self-center text-center\">\n                      <div className=\"col-sm-4 align-self-center text-center container-fluid\">\n                        <ReactLoading type={type} color={color} height={100} width={100} />\n                        <h2>{ name }</h2>\n                    </div>    \n                \n            </div>\n        \n    </div>  \n        \n    )\n}\n","\n\nexport const getUrl =  async( nameUrl ) => {\n    \n    const urlDowload = `https://youtube-mauricio.herokuapp.com/api/info?url=https://www.youtube.com/watch?v=${ nameUrl }&flatten=True`;\n\n    const response = await fetch( urlDowload );\n\n    const { videos } = await response.json();\n    \n    const directionUrl = videos.map(( video )=>{\n\n        return{\n            \n            url:video.url\n        }\n\n    });\n\n    return directionUrl;\n}\n","import React from 'react';\nimport { useFecthVideo } from '../hooks/useFecthVideo';\nimport { Loading } from '../utils/Loading';\nimport '../../styles/components/VideoDowload.css';\n\nexport const VideoDowload = ( {  url } ) => {\n\n    const { videoUrl,loading } = useFecthVideo( url );\n\n    return (\n\n        <>\n        {\n            loading && <Loading  \n                            type ={ 'spin' } \n                            color={ '#95ca3e' }  \n                            name={'Loading'}\n                        />\n        }\n            <div className=\"container-fluid player\">\n                {\n                    videoUrl.map((video,i)=>{\n                        return (\n                            <div  key={ i } className=\"animate__animated animate__zoomInDown\">\n                                <video controls autoPlay className=\"video\" >\n                                    <source src={ video.url } type=\"video/mp4\"></source>\n                                    <source src= { video.url } type=\"video/ogg\" />\n                                </video>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getUrl } from \"../helpers/getUrl\";\n\n\nexport const useFecthVideo = ( url ) => {\n\n    const [geturl, setGeturl] = useState( { \n        videoUrl:[],\n        loading:true\n    } );\n\n\n    useEffect(() => {\n\n        getUrl( url )\n        .then(( video )=>{\n\n            setGeturl( {\n                videoUrl: video, \n                loading:false\n            });\n            \n        }).catch(()=>{\n            setGeturl( { \n                loading:true\n            });\n        });\n\n    }, [url]);\n\n    return geturl;\n\n}\n","import React, {  useState } from 'react';\nimport { VideoDowload } from './VideoDowload';\nimport '../../styles/components/GridItemImage.css';\n\nexport const GridItemImage = ( { title, url, urlVideo} ) => {\n\n    const [ state, setState ] = useState('');\n    \n\n    const  handleChangeValue = ( ) =>{   \n        setState( urlVideo );\n    };\n\n\n    \n\n    return (\n        <>\n            <div className=\"animate__animated animate__fadeIn\"> \n                <h3>{ title }</h3>\n                <img    \n                        onClick={ ()=> handleChangeValue() }\n                        className=\"img-fluid\"\n                        name={ urlVideo } \n                        src={ url }\n                        alt={ title }\n                ></img>\n            </div>\n            <button\n                className=\"selectVideo\"\n                onClick={ ()=> handleChangeValue() }\n                name={ urlVideo } \n                src={ url }\n                alt={ title }\n            >\n                Seleccionar\n            </button>\n            {   \n                state && <VideoDowload url={ urlVideo } />\n            }\n            <hr/>\n        </>\n    )\n}\n","import React from 'react';\nimport { useFetchImages } from '../hooks/useFetchImages';\nimport { Loading } from '../utils/Loading';\nimport { GridItemImage } from './GridItemImage';\n\nexport const GridItem = ({ nameSearch }) => {\n\n    const { data:images,loading } = useFetchImages( nameSearch );\n\n    return(\n\n        <>\n            {\n                loading && <Loading  \n                                type ={ 'spin' } \n                                color={ '#95ca3e' }  \n                                name={'Loading'}\n                            />\n            }\n            <div>\n                {\n                    images.map(( img,i ) =>{\n\n                        return(\n                            <GridItemImage\n                                key={ i }\n                                {...img}\n                            />\n                        )\n\n                    })\n                }\n            </div>\n        </>\n\n    );\n\n}\n","import { useEffect, useState } from \"react\"\nimport { getImages } from \"../helpers/getImages\";\n\nexport const useFetchImages = ( nameSearch )=> {\n\n    const [images, setImages] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(() => {\n        \n        getImages(nameSearch)\n            .then(( img )=>{\n              \n                setImages({\n                    data:img,\n                    loading:false\n                });\n            })\n\n    }, [nameSearch]);\n\n    return images;\n}\n","import React, { useState } from 'react';\nimport { AddNewSearch } from './components/grid/AddNewSearch';\nimport { GridItem } from './components/grid/GridItem';\nimport './styles/LayoutYoutube.css'\n\nexport const LayoutYoutube = ( { defaultSearch = [] } ) => {\n\n    const [search, setSearch] = useState(defaultSearch);\n\n\n    return (\n        <div className=\"title\">\n           <h1>Youtube Mauricio</h1> \n            <hr/>\n\n            <AddNewSearch setSearch={ setSearch } ></AddNewSearch>\n            <ol>\n                {   \n                    search.map(( image )=>(\n                        <GridItem\n                            key={ image }\n                            nameSearch={ image }\n                        />\n                    ))\n\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LayoutYoutube } from './LayoutYoutube';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LayoutYoutube  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}